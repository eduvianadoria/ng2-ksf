{"version":3,"sources":["../../../src/table/table.definition.ts"],"names":[],"mappings":"AAGA;IAAA;QAEI,SAAI,GAAW,CAAC,CAAC;QACjB,YAAO,GAAW,EAAE,CAAC;QACrB,mBAAc,GAAW,CAAC,CAAC;QAC3B,YAAO,GAAsB,EAAE,CAAC;IAqDpC,CAAC;IAjDG,sCAAY,GAAZ,UAAa,IAAY;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,sCAAY,GAAZ,UAAa,OAAe;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,sCAAY,GAAZ,UAAa,UAAsB;QAE/B,EAAE,CAAC,CAAC,UAAU,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,aAAqB,CAAC;QAC1B,IAAI,SAAiB,CAAC;QAEtB,EAAE,CAAC,CAAC,UAAU,CAAC,aAAa,IAAI,gBAAgB,CAAC,CAAC,CAAC;YAC/C,aAAa,GAAG,iBAAiB,CAAC;YAClC,SAAS,GAAG,MAAM,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,aAAa,GAAG,gBAAgB,CAAC;YACjC,SAAS,GAAG,KAAK,CAAC;QACtB,CAAC;QAED,GAAG,CAAC,CAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA1B,IAAI,MAAM,SAAA;YACX,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjC,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;gBACzC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,aAAa,GAAG,YAAY,CAAC;gBACxC,CAAC;YACL,CAAC;SACJ;QAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,uCAAa,GAAb;QACI,uCAAuC;IAC3C,CAAC;IAED,sCAAY,GAAZ,UAAa,KAAa,EAAE,IAAgB;QACxC,uCAAuC;IAC3C,CAAC;IACL,sBAAC;AAAD,CA1DA,AA0DC,IAAA","file":"table.definition.js","sourceRoot":"","sourcesContent":["import { ColumnType } from './column-type';\r\nimport { TableInterface } from './table.interface';\r\n\r\nexport class TableDefinition implements TableInterface  {\r\n    \r\n    page: number = 1;\r\n    perPage: number = 10;\r\n    collectionSize: number = 0;\r\n    columns: Array<ColumnType> = [];\r\n    orderField: string;\r\n    orderType: string;\r\n\r\n    onPageChange(page: number) {\r\n        this.page = page;\r\n        this.loadDataTable();\r\n    }\r\n\r\n    onSizeChange(perPage: number) {\r\n        this.perPage = perPage;\r\n        this.loadDataTable();\r\n    }\r\n\r\n    onSortChange(columnType: ColumnType) {\r\n\r\n        if (columnType.classNameSort == null) {\r\n            return;\r\n        }\r\n        \r\n        var classNameSort: string;\r\n        var orderType: string;\r\n\r\n        if (columnType.classNameSort == 'sorting_ss_asc') {\r\n            classNameSort = 'sorting_ss_desc';\r\n            orderType = 'desc';\r\n        } else {\r\n            classNameSort = 'sorting_ss_asc';\r\n            orderType = 'asc';\r\n        }\r\n\r\n        for (let columm of this.columns) {\r\n            if (columm.classNameSort != null) {\r\n                if (columm.name == columnType.name) {\r\n                    columm.classNameSort = classNameSort;\r\n                } else {\r\n                    columm.classNameSort = 'sorting_ss';\r\n                }\r\n            }\r\n        }\r\n\r\n        this.orderField = columnType.name;\r\n        this.orderType = orderType;\r\n        this.loadDataTable();\r\n    }\r\n\r\n    loadDataTable() { \r\n        // será implementado na classe filha...\r\n    }\r\n\r\n    tableRefresh(count: number, rows: Array<any>) { \r\n        // será implementado na classe filha...\r\n    }\r\n}"]}