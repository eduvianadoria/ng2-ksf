{"version":3,"sources":["../../../src/table/table.component.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAa,MAAO,eAAA,CAAgB;AAIvE;IAAA;QAEI,aAAQ,GAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAO5C,WAAM,GAAY,IAAI,CAAC;QACvB,aAAQ,GAAY,KAAK,CAAC;QAC1B,kBAAa,GAAY,IAAI,CAAC;QAC9B,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;IA0FvC,CAAC;IAxFG,mCAAU,GAAV,UAAW,IAAY;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,mCAAU,GAAV,UAAW,IAAY;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,mCAAU,GAAV,UAAW,UAAsB;QAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IA4EL,qBAAC;AAAD,CAxGA,AAwGC;;AA3EM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,qhEAqDT;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,6BAAc,GAA2C;IAChE,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACnC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACnC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAClC,CAAC","file":"table.component.js","sourceRoot":"","sourcesContent":["import { styles } from './table.component.css.shim.ngstyle';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ColumnType } from './column-type';\r\n\r\n\r\nexport class TableComponent {\r\n\r\n    pageSize : Array<number> = [10, 25, 50, 100];\r\n\r\n     collectionSize: number;\r\n     page: number;\r\n     perPage: number;\r\n     maxSize: number;\r\n     columns: Array<any>;\r\n     rotate: boolean = true;\r\n     ellipses: boolean = false;\r\n     boundaryLinks: boolean = true;\r\n     onPageChange = new EventEmitter();\r\n     onSizeChange = new EventEmitter();\r\n     onSortChange = new EventEmitter();\r\n\r\n    pageChange(page: number) {\r\n        this.page = page;\r\n        this.onPageChange.emit(page);\r\n    }\r\n\r\n    sizeChange(size: number) {\r\n        this.perPage = size;\r\n        this.onSizeChange.emit(size);\r\n    }\r\n\r\n    sortChange(columnType: ColumnType) {\r\n        this.onSortChange.emit(columnType);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'ksf-table',\r\n    template: `\r\n            <style>\r\n                th.sorting_ss_asc {\r\n                    background: url('../images/sort_asc.png') no-repeat center right;\r\n                    cursor: pointer;\r\n                }\r\n\r\n                th.sorting_ss_desc {\r\n                    background: url('../images/sort_desc.png') no-repeat center right;\r\n                    cursor: pointer;\r\n                }\r\n\r\n                th.sorting_ss {\r\n                    background: url('../images/sort_both.png') no-repeat center right;\r\n                    cursor: pointer;\r\n                }\r\n            </style>\r\n\r\n            <table class=\"table table-condensed table-bordered table-striped\">\r\n            <thead>\r\n                    <tr>\r\n                        <th *ngFor=\"let column of columns\" class=\"{{column.class}}\" (click)=\"sortChange(column)\">\r\n                            {{column.title}}\r\n                        </th>\r\n                    </tr>\r\n            </thead>\r\n               <ng-content></ng-content>\r\n            </table>\r\n\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-lg-6\">\r\n\r\n                    <ngb-pagination \r\n                        [(page)]=\"page\" \r\n                        [(pageSize)]=\"perPage\"\r\n                        [(collectionSize)]=\"collectionSize\" \r\n                        [(maxSize)]=\"maxSize\" \r\n                        [rotate]=\"rotate\" \r\n                        [ellipses]=\"ellipses\" \r\n                        [boundaryLinks]=\"boundaryLinks\"\r\n                        (pageChange)=\"pageChange($event)\"></ngb-pagination>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6\">\r\n                    <div class=\"btn-group pull-right\"> \r\n                        <button *ngFor=\"let size of pageSize\"  [ngClass]=\"{'active': size == perPage}\" (click)=\"sizeChange(size)\" type=\"button\" class=\"btn btn-default\"> \r\n                            <span>{{size}}</span> \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n    `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collectionSize': [{ type: Input },],\n'page': [{ type: Input },],\n'perPage': [{ type: Input },],\n'maxSize': [{ type: Input },],\n'columns': [{ type: Input },],\n'rotate': [{ type: Input },],\n'ellipses': [{ type: Input },],\n'boundaryLinks': [{ type: Input },],\n'onPageChange': [{ type: Output },],\n'onSizeChange': [{ type: Output },],\n'onSortChange': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}